[' there is more information on the internet than any human can absorb in a lifetime what you need is not access to that information but a scalable way to collect organize and analyze it ', ' you need web scraping ', ' web scraping automatically extracts data and presents it in a format you can easily make sense of in this tutorial we ll focus on its applications in the financial market but web scraping can be used in a wide variety of situations ', ' if you re an avid investor getting closing prices every day can be a pain especially when the information you need is found across several webpages we ll make data extraction easier by building a web scraper to retrieve stock indices automatically from the internet ', ' we are going to use python as our scraping language together with a simple and powerful library beautifulsoup ', ' next we need to get the beautifulsoup library using pip a package management tool for python ', ' in the terminal type ', ' note if you fail to execute the above command line try adding sudo in front of each line ', ' before we start jumping into the code let s understand the basics of html and some rules of scraping ', ' html tagsif you already understand html tags feel free to skip this part ', ' this is the basic syntax of an html webpage every tag serves a block inside the webpage doctype html html documents must start with a type declaration the html document is contained between html and html the meta and script declaration of the html document is between head and head the visible part of the html document is between body and body tags title headings are defined with the h through h tags paragraphs are defined with the p tag ', ' other useful tags include a for hyperlinks table for tables tr for table rows and td for table columns ', ' also html tags sometimes come with id or class attributes the id attribute specifies a unique id for an html tag and the value must be unique within the html document the class attribute is used to define equal styles for html tags with the same class we can make use of these ids and classes to help us locate the data we want ', ' for more information on html tags id and class please refer to w schools tutorials ', ' scraping rules ', ' let s take one page from the bloomberg quote website as an example ', ' as someone following the stock market we would like to get the index name s p and its price from this page first right click and open your browser s inspector to inspect the webpage ', ' try hovering your cursor on the price and you should be able to see a blue box surrounding it if you click it the related html will be selected in the browser console ', ' from the result we can see that the price is inside a few levels of html tags which is div class basic quote div class price container up div class price ', ' similarly if you hover and click the name s p index it is inside div class basic quote and h class name ', ' now we know the unique location of our data with the help of class tags ', ' now that we know where our data is we can start coding our web scraper open your text editor now ', ' first we need to import all the libraries that we are going to use ', ' next declare a variable for the url of the page ', ' then make use of the python urllib to get the html page of the url declared ', ' finally parse the page into beautifulsoup format so we can use beautifulsoup to work on it ', ' now we have a variable soup containing the html of the page here s where we can start coding the part that extracts the data ', ' remember the unique layers of our data beautifulsoup can help us get into these layers and extract the content with find in this case since the html class name is unique on this page we can simply query div class name ', ' after we have the tag we can get the data by getting its text ', ' similarly we can get the price too ', ' when you run the program you should be able to see that it prints out the current price of the s p index ', ' now that we have the data it is time to save it the excel comma separated format is a nice choice it can be opened in excel so you can see the data and process it easily ', ' but first we have to import the python csv module and the datetime module to get the record date insert these lines to your code in the import section ', ' at the bottom of your code add the code for writing data to a csv file ', ' now if you run your program you should able to export an index csv file which you can then open with excel where you should see a line of data ', ' so if you run this program everyday you will be able to easily get the s p index price without rummaging through the website ', ' multiple indicesso scraping one index is not enough for you right we can try to extract multiple indices at the same time ', ' first modify the quote page into an array of urls ', ' then we change the data extraction code into a for loop which will process the urls one by one and store all the data into a variable data in tuples ', ' also modify the saving section to save data row by row ', ' rerun the program and you should be able to extract two indices at the same time ', ' beautifulsoup is simple and great for small scale web scraping but if you are interested in scraping data at a larger scale you should consider using these other alternatives ', ' dry stands for don t repeat yourself try to automate your everyday tasks like this person some other fun projects to consider might be keeping track of your facebook friends active time with their consent of course or grabbing a list of topics in a forum and trying out natural language processing which is a hot topic for artificial intelligence right now ', ' if you have any questions please feel free to leave a comment below ', ' referenceshttp www gregreda com web scraping with python http www analyticsvidhya com blog beginner guide web scraping beautiful soup python ', ' this article was originally published on altitude labs blog and was written by our software engineer leonard mok altitude labs is a software agency that specializes in personalized mobile first react apps ', ' investment banker turned software engineer cofounder altitude labs metisa writes about predictive marketing and personalization for e commerce ', ' our community publishes stories worth reading on development design and data science ']